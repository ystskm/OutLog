// (Tue, 28 Oct 2025 15:47:23 GMT) MINIFIED BY @synquery/ms
(r=>{"undefined"!=typeof module&&module.exports?module.exports=r:"undefined"!=typeof window&&window.AppSpace?window.AppSpace.define("OutLog",r):console.warn("module OutLog cannot set any namespace");})((()=>{const r={Emergency:0,Critical:0,Fatal:0,Alert:1,Error:1,Warning:2,Notice:3,Info:3,Debug:4,Trace:5,Verbose:5},e={0:"f",1:"e",2:"w",3:"i",4:"d",5:"v"},o=Object.keys(r);class t{constructor(r){this.LOG_TAG=r;this.LOG_LEV=3;}fatal(){return this.Log(Array.from(arguments),"f");}error(){return this.Log(Array.from(arguments),"e");}warn(){return this.Log(Array.from(arguments),"w");}info(){return this.Log(Array.from(arguments),"i");}debug(){return this.Log(Array.from(arguments),"d");}trace(){return this.Log(Array.from(arguments),"v");}f(){return this.Log(Array.from(arguments),"f");}e(){return this.Log(Array.from(arguments),"e");}w(){return this.Log(Array.from(arguments),"w");}i(){return this.Log(Array.from(arguments),"i");}d(){return this.Log(Array.from(arguments),"d");}v(){return this.Log(Array.from(arguments),"v");
}Log(r,e="i") {const o=this,t=String(e).toLocaleLowerCase().charAt(0),n=function(r,e,o){return[`[${new Date().toISOString()}][${o.toUpperCase()}] - (${e})`].concat(r);}(r,o.LOG_TAG,t),s=()=>n.splice(0);switch(t){case"f":console.fatal?console.fatal(...n):console.error?console.error(...n):console.log(...n);break;case"e":o.LOG_LEV>=1?console.error?console.error(...n):console.log(...n):s();break;case"w":o.LOG_LEV>=2?console.error?console.error(...n):console.log(...n):s();break;case"i":o.LOG_LEV>=3?console.info?console.info(...n):console.log(...n):s();break;case"d":o.LOG_LEV>=4?console.debug?console.debug(...n):console.log(...n):s();break;case"v":o.LOG_LEV>=5?console.trace?console.trace(...n):console.log(...n):s();break;default:console.log(...n);}return n;}setLev(e){const t=function(e){const t=String(e).toLowerCase();for(let e=0;e<o.length;e++){const n=o[e];if(n.toLowerCase().startsWith(t))return r[n];}return 3;}(e);e="string" == typeof e ? null == t ? e.length : t : isNaN(parseInt(e)) ? 3 : parseInt(e);
return this.LOG_LEV=Math.min(5,Math.max(0,e));}getLev(){return this.LOG_LEV;}getTyp(){return e[this.LOG_LEV];}}return function(r){return new t(r);};})());